name: Scaffold and Commit Action
description: |
  This action determines the type of repository based on its properties,
  copies the files from the corresponding scaffolding directory,
  overlays them onto the workspace, and commits the changes to a Pull Request.

inputs:
  token:
    description: 'GitHub Token'
    required: true

runs:
  using: 'composite'
  steps:
  - name: Checkout Repository
    uses: actions/checkout@v4
    with:
      token: ${{ inputs.token }}

  - name: Get Repository Properties
    id: repo_properties
    shell: bash
    env:
      GH_TOKEN: ${{ inputs.token }}
    run: |
      response=$(gh api /repos/${{ github.repository }}/properties/values)
      properties=$(echo "$response" | jq -cr 'reduce .[] as $item ({}; .[$item.property_name] = $item.value)')
      echo "properties=$properties" >> $GITHUB_OUTPUT

  - name: Determine Repository Type
    id: repo_type
    shell: bash
    run: |
      type="${{ fromJSON(steps.repo_properties.outputs.properties).type }}"
      echo "type=$type" >> $GITHUB_OUTPUT

  - name: Run Scaffolding
    id: scaffolding
    shell: bash
    run: |
      type="${{ steps.repo_type.outputs.type }}"
      scaffolding_path="${{github.action_path}}/scaffolding/$type"
      if [ -f "${scaffolding_path}/Makefile" ]; then
        echo "Running scaffolding for '$type'..."
        echo "## Scaffolding ($type)"" >> $GITHUB_STEP_OUTPUT
        echo '```shell' >> $GITHUB_STEP_OUTPUT
        cd $scaffolding_path && make all >> $GITHUB_STEP_OUTPUT 2>&1
        echo '```' >> $GITHUB_STEP_OUTPUT
      else
        echo "Scaffolding for type '$type' not supported."
        echo '> [!WARNING]' >> $GITHUB_STEP_OUTPUT
        echo '> ## Unsupported Repository Type' >> $GITHUB_STEP_OUTPUT
        echo "> Scaffold for type `'$type'` not found." >> $GITHUB_STEP_OUTPUT
        exit 1
      fi
      
  - name: Commit and Push Changes
    uses: peter-evans/create-pull-request@v6
    with:
      token: ${{ inputs.token }}
      commit-message: 'Scaffold and overlay files'
      branch: 'auto-update/scaffolding'
      base: ${{ github.event.repository.default_branch }}
      title: 'Update Repository Scaffolding'
      body: |
        ## what
        - This pull request includes the scaffolding files overlaid onto the repository.

        ## why
        - Update the repository whenever the scaffolding files change from the organization's `.github` repository.
