---
name: Release Branch
on:
  push:
    branches:
      - main
      - release/**
    # This .github organization is a special case for the release branch
    # We want to cut releases when github reusable/shared workflows change.
    # So we should not skip .github/** paths
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - 'test/**'
      - 'README.*'

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  ci-readme:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/create-github-app-token@v1
        id: github-app
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: cloudposse-github-actions/readme@main
        with:
          token: ${{ steps.github-app.outputs.token }}
          readme_enabled: true
          banner_enabled: true
          commit_method: 'commit'

  release-controller:
    runs-on: ubuntu-latest
    needs: [ci-readme]
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Draft release
        id: release
        uses: cloudposse/github-action-auto-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  major-release-tagger:
    runs-on: ubuntu-latest
    needs: [release-controller]
    steps:
      - uses: cloudposse/github-action-major-release-tagger@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  release-branch-manager:
    runs-on: ubuntu-latest
    needs: [release-controller]
    steps:
      - uses: cloudposse/github-action-release-branch-manager@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
