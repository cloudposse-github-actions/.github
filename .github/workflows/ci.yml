name: "Shared github action CI workflow"

on:
  workflow_call:
    inputs:
      organization:
        description: "Repository owner organization (ex. acme for repo acme/example)"
        required: false
        default: ${{ github.event.repository.owner.login }}
        type: string
      repository:
        description: "Repository name (ex. example for repo acme/example)"
        required: false
        default: ${{ github.event.repository.name }}
        type: string
      tests-prefix:
        description: "Workflows file name prefix to run as tests"
        required: false
        type: string
        default: 'test-*'
      publish:
        description: "Whether to publish a new release immediately"
        required: false
        default: "true"
        type: string
      runs-on:
        description: "Overrides job runs-on setting (json-encoded list)"
        type: string
        required: false
        default: '["ubuntu-latest"]'

permissions:
  contents: write
  actions: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  readme:
    uses: cloudposse/github-actions-workflows/.github/workflows/ci-readme.yml@main
    name: "readme"
    if: ${{ github.event_name == 'push' }}
    with:
      runs-on: ${{ inputs.runs-on }}
    secrets: inherit

  lint:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: YAML file validation
        uses: mpoc/nexus-validate-using-remote-schema-action@main
        with:
          api-endpoint: https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-action.json
          yaml-file: action.yml

  context:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - name: Workflows
        id: workflows
        shell: bash
        run: |
          TEST_FILES=$(find ./.github/workflows -type f -name "${{ inputs.tests-prefix }}" -exec basename {} \; | jq -MRc -s '. | split("\n") | map(select(. != ""))')
          echo "list=${TEST_FILES}" >> $GITHUB_OUTPUT

    outputs:
      tests: ${{ steps.workflows.outputs.list }}

  test:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    if: ${{ needs.context.outputs.tests != '[]'  }}
    strategy:
      matrix:
        env: ${{ fromJson(needs.context.outputs.tests) }}
    needs: [ context ]
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: ${{ inputs.organization }}
          repo: ${{ inputs.repository }}
          github_token: ${{ github.token }}
          workflow_file_name: ${{ matrix.env }}
          ref: ${{ github.event_name == 'push' && github.ref || github.event.pull_request.head.ref }}
          wait_interval: 10
          client_payload: '{}'
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true

  ci:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    if: ${{ always() }}
    steps:
      - run: |
          echo '${{ toJSON(needs) }}'  # easier debug
          ! ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
    needs: [ lint, test, readme ]

  release:
    needs: [ ci ]
    name: "release"
    if: ${{ github.event_name == 'push' }}
    uses: cloudposse/.github/.github/workflows/shared-auto-release.yml@main
    with:
      publish: ${{ inputs.publish }}
    secrets: inherit
